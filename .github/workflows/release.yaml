name: Release
on:
  workflow_dispatch:
    inputs:
      component:
        description: "The component to release"
        required: true
        type: choice
        options:
          - identity-server

jobs:
  build:
    name: Build the code for each platform
    # unless we use osxcross, we can only target mac from a mac machine
    runs-on: macos-14 
    env:
      LINUX: x86_64-unknown-linux-musl 
      LINUX_ARM: aarch64-unknown-linux-musl 
      WINDOWS: x86_64-pc-windows-gnu 
      MACOS: aarch64-apple-darwin
    steps:
      - uses: actions/checkout@v4.2.0
      - uses: mlugg/setup-zig@v1.2.1
        with:
          version: 0.13.0
      - name: Cache cargo dependencies
        uses: Swatinem/rust-cache@v2.7.3
      # - name: Install mingw
      #   run: sudo apt-get install -y mingw-w64

      - name: Install cargo-zigbuild
        run: cargo install --locked cargo-zigbuild@0.19.3

      - name: Cargo zigbuild
        run: |
          cargo zigbuild \
            --target ${LINUX} \
            --target ${LINUX_ARM} \
            --target ${WINDOWS} \
            --target ${MACOS} \
            --profile artifact \
            -p ${{ inputs.component }}
      - name: Arrange artifact directory
        run: |
          set -Eeuxo pipefail
          mkdir artifacts
          component="${{ inputs.component }}"
          for f in target/*/artifact/"${component}"{,\.exe}; do
            target_triple="$(echo "${f}" | cut -d '/' -f2)"
            case "${target_triple}" in
              "${LINUX}")
                mv "${f}" "artifacts/${component}-linux-x86_64" ;;
              "${LINUX_ARM}")
                mv "${f}" "artifacts/${component}-linux-aarch64" ;;
              "${WINDOWS}")
                mv "${f}" "artifacts/${component}-windows-x86_64.exe" ;;
              "${MACOS}")
                mv "${f}" "artifacts/${component}-macos-aarch64" ;;
              *)
                echo "Unexpected target triple"
                exit 1 ;;
            esac
          done

          ls -aRsh artifacts
      
      - name: Compute sha256 checksums
        run: |
          set -Eeuxo pipefail
          pushd artifacts
          for f in *; do
            shasum -a 256 "${f}" > "${f}.sha256" 
          done
          ls -aRsh
          popd

      - name: Upload artifacts
        uses: actions/upload-artifact@v4.4.0
        with:
          name: rust
          if-no-files-found: error
          retention-days: 30
          path: |
            artifacts

  release:
    name: Create Release and Tag
    runs-on: ubuntu-24.04
    needs: build
    steps:
      - name: Download Rust Artifacts
        uses: actions/download-artifact@v4.1.8
        with:
          # didn't specify artifact name, so all artifacts are downloaded and merged
          # into the `artifacts` dir
          path: artifacts
          merge-multiple: true

      - name: List Downloaded Artifacts
        run: ls -aRsh artifacts

